{"version":3,"sources":["serviceWorker.ts","pages/paths.ts","context/ipc-events.ts","components/user-overview/user-overview.tsx","context/ipc.tsx","pages/main/main-page.tsx","pages/loading/loading-page.tsx","pages/invite/invite-page.tsx","components/settings-components/user-settings.tsx","components/settings-components/interface-settings.tsx","components/settings-components/system-settings.tsx","components/settings-components/help-settings.tsx","pages/settings/settings-page.tsx","context/lumi-context.tsx","components/create/create-component.tsx","components/join/join-component.tsx","components/topbar/top-bar.tsx","pages/start/start-page.tsx","components/leave/leave-component.tsx","pages/leave/leave-page.tsx","pages/room/room-page.tsx","components/server-log/server-log-component.tsx","pages/server-log/server-log-page.tsx","context/ipc-global.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","Paths","IPCEvents","layout","labelCol","span","wrapperCol","tailLayout","offset","CreateComponent","user_Kick","console","log","shape","size","alt","src","this","props","profilePictureSource","name","isHost","CrownFilled","disabled","placeholder","value","fileLocation","lastEdit","rows","onClick","type","Component","ipcRenderer","require","IPC","createRoom","context","source","a","async","invoke","CREATE_ROOM","then","_","roomID","joinRoom","sourceFolderPath","JOIN_ROOM","room","update","connected","loading","catch","selectDir","SELECT_DIR","fetchLogs","amount","FETCH_LOG","fetchFolder","folder","FETCH_FOLDER","fetchUsers","roomId","FETCH_USERS","updateFolder","callback","on","UPDATE_FOLDER","treeData","updateUsers","UPDATE_USERS","createWindow","CREATE_WINDOW","openInvite","width","height","path","INVITE","openLogs","SERVER_LOG","openLeave","LEAVE","openSettings","SETTINGS","MainPage","className","LoadingPage","state","onCancel","href","InvitePage","inviteText","onCopy","alert","onLink","block","getBase64","img","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","file","isJpgOrPng","error","isLt2M","UserSettings","imageUrl","handleChange","info","status","setState","originFileObj","listType","showUploadList","onChange","Password","options","label","InterfaceSettings","defaultValue","min","max","formatter","SystemSettings","HelpSettings","SettingsPage","activeItem","settingsMenuItems","createMenuItems","item","Item","key","onItemClick","param","onApply","message","success","mode","map","element","push","LumiContext","React","createContext","LumiProvider","Provider","Consumer","Search","form","createRef","current","setFieldsValue","onFinish","values","onFinishFailed","errorInfo","justify","ref","initialValues","remember","rules","required","enterButton","FolderOpenOutlined","onSearch","htmlType","contextType","JoinComponent","FolderOutlined","TopBar","title","tags","color","TabPane","StartPage","isCreate","selectedKeys","updateTitle","to","ROOM","defaultActiveKey","tab","LeaveComponent","process","danger","LeavePage","RoomFolderPage","users","bottomMenuButtons","icon","UserAddOutlined","FileTextOutlined","ArrowRightOutlined","onSelect","keys","event","onExpand","makeUser","user","avatar","UserOutlined","username","description","id","multiple","defaultExpandAll","START","Title","ServerLogComponent","logs","componentDidMount","onExport","content","setTimeout","duration","exportButton","ExportOutlined","makeLog","Meta","date","level","itemLayout","ServerLogPage","IPCGlobal","CHECK_CONNECTION","NAVIGATE","route","history","DISCONNECTED","IPCGlobalWithRouter","withRouter","App","obj","hashType","component","HOME","LOADING","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b3701a58.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","enum Paths {\n  TOP_BAR = \"/\",\n  HOME = \"/home\",\n  START = \"/start\",\n  LOADING = \"/loading\",\n  INVITE = \"/invite\",\n  SETTINGS = \"/settings\",\n  LEAVE = \"/leave\",\n  ROOM = \"/room\",\n  SERVER_LOG = \"/serverlog\",\n}\n\nexport default Paths;\n","enum IPCEvents {\n  SELECT_DIR = \"select_dir\",\n  CREATE_ROOM = \"create_room\",\n  JOIN_ROOM = \"join_room\",\n  NAVIGATE = \"navigate\",\n  DISCONNECTED = \"disconnected\",\n  CHECK_CONNECTION = \"check_connection\",\n  FETCH_LOG = \"fetch_log\",\n  FETCH_FOLDER = \"fetch_folder\",\n  FETCH_USERS = \"fetch_users\",\n  CREATE_WINDOW = \"create_window\",\n  UPDATE_FOLDER = \"update_folder\",\n  UPDATE_USERS = \"update_users\",\n}\n\nexport default IPCEvents;\n","import React, { Component } from \"react\";\nimport { Button, Input, Avatar } from \"antd\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { CrownFilled } from \"@ant-design/icons\";\nimport FormItem from \"antd/lib/form/FormItem\";\n\ninterface IProps {\n  name: string;\n  log: string;\n  fileLocation: string;\n  lastEdit: string;\n  isHost: boolean;\n  profilePictureSource: any;\n}\ninterface IState {}\n\nconst layout = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 14 },\n};\n\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\nexport default class CreateComponent extends Component<IProps, IState> {\n  user_Kick = () => {\n    console.log(\"Oh no! I've been kicked.\");\n  };\n\n  render() {\n    return (\n      <>\n        <form {...layout}>\n          <FormItem>\n            <Avatar\n              shape=\"circle\"\n              size={95}\n              alt=\"Profile Picture\"\n              src={this.props.profilePictureSource}\n            />\n          </FormItem>\n\n          <FormItem {...tailLayout}>\n            <h1> {this.props.name} </h1>\n            {this.props.isHost ? <CrownFilled /> : \"\"}\n          </FormItem>\n\n          <FormItem>\n            <p> Last File Edited: </p>\n            <Input\n              disabled={true}\n              placeholder=\"File Location\"\n              value={this.props.fileLocation}\n            />\n          </FormItem>\n\n          <FormItem>\n            <p> Time Edited: </p>\n            <h4> {this.props.lastEdit} </h4>\n          </FormItem>\n\n          <FormItem>\n            <p> Patch: </p>\n            <TextArea rows={10} disabled={true} value={this.props.log} />\n          </FormItem>\n\n          <FormItem>\n            <Button onClick={this.user_Kick} type=\"primary\">\n              Kick{\" \"}\n            </Button>\n          </FormItem>\n        </form>\n      </>\n    );\n  }\n}\n","import { Window, Room } from \"./interfaces\";\nimport IPCEvents from \"./ipc-events\";\nimport Paths from \"src/pages/paths\";\n\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default class IPC {\n  static createRoom = async (context: any, source: string) => {\n    return await ipcRenderer\n      .invoke(IPCEvents.CREATE_ROOM, source)\n      .then((_: any, roomID: string) => {\n        return IPC.joinRoom(context, roomID, source);\n      });\n  };\n\n  static joinRoom = async (\n    context: any,\n    roomID: string,\n    sourceFolderPath: string\n  ) => {\n    return await ipcRenderer\n      .invoke(IPCEvents.JOIN_ROOM, roomID, sourceFolderPath)\n      .then((room: Room) => {\n        console.log(room);\n        context.update({\n          room,\n          connected: true,\n          loading: false,\n        });\n      })\n      .catch(() => {\n        context.update({\n          loading: false,\n        });\n      });\n  };\n\n  static selectDir = (): Promise<void> => {\n    return ipcRenderer.invoke(IPCEvents.SELECT_DIR);\n  };\n\n  static fetchLogs = (amount: number): Promise<void> => {\n    return ipcRenderer.invoke(IPCEvents.FETCH_LOG, amount);\n  };\n\n  static fetchFolder = (folder: string): Promise<void> => {\n    return ipcRenderer.invoke(IPCEvents.FETCH_FOLDER, folder);\n  };\n\n  static fetchUsers = (roomId: string): Promise<void> => {\n    return ipcRenderer.invoke(IPCEvents.FETCH_USERS, roomId);\n  };\n\n  static updateFolder = (callback: (treeData: any) => any) => {\n    ipcRenderer.on(IPCEvents.UPDATE_FOLDER, (_: any, treeData: any) => {\n      callback(treeData);\n    });\n  };\n\n  static updateUsers = (callback: (users: any) => any) => {\n    ipcRenderer.on(IPCEvents.UPDATE_USERS, (_: any, treeData: any) => {\n      callback(treeData);\n    });\n  };\n\n  static createWindow = (window: Window) => {\n    return ipcRenderer.invoke(IPCEvents.CREATE_WINDOW, window);\n  };\n\n  static openInvite = () => {\n    return IPC.createWindow({\n      width: 500,\n      height: 400,\n      path: Paths.INVITE,\n    });\n  };\n\n  static openLogs = () => {\n    return IPC.createWindow({\n      width: 800,\n      height: 800,\n      path: Paths.SERVER_LOG,\n    });\n  };\n\n  static openLeave = () => {\n    return IPC.createWindow({\n      width: 300,\n      height: 200,\n      path: Paths.LEAVE,\n    });\n  };\n\n  static openSettings = () => {\n    return IPC.createWindow({\n      width: 800,\n      height: 400,\n      path: Paths.SETTINGS,\n    });\n  };\n}\n","import React, { Component } from \"react\";\nimport { Button } from \"antd\";\nimport \"./main-page.scss\";\n\nimport UserOverview from \"src/components/user-overview/user-overview\";\nimport IPC from \"src/context/ipc\";\n\ninterface IProps {}\ninterface IState {}\n\nexport default class MainPage extends Component<IProps, IState> {\n  onClick = () => {\n    IPC.openSettings();\n  };\n  render() {\n    return (\n      <div className=\"center\">\n        <UserOverview\n          name={\"Name\"}\n          log={\"None\"}\n          fileLocation={\"The Computer\"}\n          lastEdit={\"Yesterday\"}\n          isHost={true}\n          profilePictureSource={null}\n        />\n        <Button onClick={this.onClick}>Popup</Button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./loading-page.scss\";\n\nimport { Button } from \"antd\";\n\ninterface IProps {}\ninterface IState {}\n\nexport default class LoadingPage extends Component<IProps, IState> {\n  state = {};\n\n  onCancel = () => {\n    console.log(\"managed to cancel the loading screen\");\n  };\n\n  render() {\n    return (\n      <div className=\"center\">\n        <div className=\"loadingZone\">\n          <div className=\"lumiFish\"></div>\n        </div>\n\n        <div>\n          <Button\n            className=\"bottomCenter\"\n            onClick={this.onCancel}\n            type=\"primary\"\n            shape=\"round\"\n            href=\"/home\"\n          >\n            Cancel\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Input, Row, Col } from \"antd\";\nimport \"./invite-page.scss\";\n\nimport { Button } from \"antd\";\n\ninterface IProps {}\ninterface IState {\n  roomID: string;\n}\n\nexport default class InvitePage extends Component<IProps, IState> {\n  state = {\n    roomID: \"1802471964798179042168\",\n  };\n\n  inviteText = (\n    <div className=\"warning-text\">\n      <br />\n      <div>\n        <h3>Warning:</h3>\n      </div>\n      <p>\n        Anyone with the session ID can join the session and introduce changes.\n      </p>\n      <p>\n        Make sure to keep your session ID secret from the rest of the internet\n        to keep your work safe.\n      </p>\n    </div>\n  );\n\n  onCopy = () => {\n    alert(\"to add some copy to clipboard feature\");\n  };\n  onLink = () => {\n    alert(\"to add some link stuff here\");\n  };\n  //<img src=\"/lumi_fisk02.gif\" />\n  render() {\n    const { roomID } = this.state;\n    return (\n      <div className=\"center\">\n        <h2>Session ID:</h2>\n        <Input placeholder={roomID} />\n        {this.inviteText}\n        <div className=\"stick-to-bottom\">\n          <Row className=\"bottomButtons\">\n            <Col span={12}>\n              <Button type=\"primary\" block onClick={this.onCopy}>\n                Copy Session ID\n              </Button>\n            </Col>\n\n            <Col span={12}>\n              <Button type=\"primary\" block onClick={this.onLink}>\n                Fetch Invite Link\n              </Button>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Row, Col, Input, Upload } from \"antd\";\nimport \"./settings-components.scss\";\n\ninterface IProps {}\ninterface IState {}\n\nfunction getBase64(img: Blob, callback: any) {\n  const reader = new FileReader();\n  reader.addEventListener(\"load\", () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file: any) {\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n  if (!isJpgOrPng) {\n    console.error(\"You can only upload JPG/PNG file!\");\n  }\n  const isLt2M = file.size / 1024 / 1024 < 2;\n  if (!isLt2M) {\n    console.error(\"Image must smaller than 2MB!\");\n  }\n  return isJpgOrPng && isLt2M;\n}\n\nexport default class UserSettings extends Component<IProps, IState> {\n  state = { imageUrl: \"\", loading: false };\n\n  handleChange = (info: any) => {\n    if (info.file.status === \"uploading\") {\n      console.log(\"uploading\");\n      return this.setState({ loading: true });\n    }\n    if (info.file.status === \"done\") {\n      console.log(\"done\");\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, (imageUrl: any) =>\n        this.setState({\n          imageUrl: imageUrl,\n          loading: false,\n        })\n      );\n    }\n  };\n\n  render() {\n    const { imageUrl } = this.state;\n    return (\n      <div>\n        <Row>\n          <Col span={10}>Change Avatar:</Col>\n          <Col span={14}>\n            <div className=\"change-avatar\">\n              <Upload\n                name=\"avatar\"\n                listType=\"picture-card\"\n                className=\"avatar-uploader\"\n                showUploadList={false}\n                beforeUpload={beforeUpload}\n                onChange={this.handleChange}\n              >\n                {imageUrl ? (\n                  <img src={imageUrl} alt=\"avatar\" />\n                ) : (\n                  <div>\n                    <div className=\"ant-upload-text\">Upload</div>\n                  </div>\n                )}\n              </Upload>\n            </div>\n          </Col>\n        </Row>\n        <br />\n        <Row>\n          <Col span={10}>Change username:</Col>\n          <Col span={14}>\n            <Input placeholder=\"new username\" />\n          </Col>\n        </Row>\n        <br />\n        <Row>\n          <Col span={10}>Change password:</Col>\n          <Col span={14}>\n            <Input.Password placeholder=\"new password\" />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Cascader, Row, Col, InputNumber } from \"antd\";\nimport \"./settings-components.scss\";\n\ninterface IProps {}\ninterface IState {}\n\nconst options = [\n  {\n    value: \"Lumi_01\",\n    label: \"Lumi Default\",\n  },\n  {\n    value: \"Lumi_dark_01\",\n    label: \"Lumi Dark\",\n  },\n  {\n    value: \"Lumi_classic_01\",\n    label: \"Lumi Classic\",\n  },\n  {\n    value: \"Lumi_extra_02\",\n    label: \"Luminosity\",\n  },\n  {\n    value: \"Ubuntu_01\",\n    label: \"Ubuntu Ambience\",\n  },\n];\n\nexport default class InterfaceSettings extends Component<IProps, IState> {\n  state = {\n    value: 100,\n  };\n\n  onChange = (value: number) => {\n    console.log(\"changed\", value);\n  };\n\n  render() {\n    return (\n      <div>\n        <Row>\n          <Col span={10}>Application theme:</Col>\n          <Col span={14}>\n            <Cascader options={options} placeholder=\"Please select\" />\n          </Col>\n        </Row>\n        <br />\n        <Row>\n          <Col span={10}>Application Interface size:</Col>\n          <Col span={14}>\n            <div>\n              <InputNumber\n                defaultValue={100}\n                min={0}\n                max={300}\n                formatter={(value) => `${value}%`}\n              />\n            </div>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Row, Col, Input } from \"antd\";\nimport \"./settings-components.scss\";\n\ninterface IProps {}\ninterface IState {}\n\nexport default class SystemSettings extends Component<IProps, IState> {\n  render() {\n    return (\n      <div>\n        <Row>\n          <Col span={10}>Default project directory:</Col>\n          <Col span={14}>\n            <Input placeholder=\"default size\" />\n          </Col>\n        </Row>\n        <br />\n        <Row>\n          <Col span={10}>Default project directory:</Col>\n          <Col span={14}>\n            <Input placeholder=\"default size\" />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Row, Col } from \"antd\";\nimport \"./settings-components.scss\";\n\ninterface IProps {}\ninterface IState {}\n\nexport default class HelpSettings extends Component<IProps, IState> {\n  state = {\n    value: 100,\n  };\n\n  onChange = (value: number) => {\n    console.log(\"changed\", value);\n  };\n\n  render() {\n    return (\n      <div>\n        <Row>\n          <Col span={10}>Maybe we should't have a help setting</Col>\n        </Row>\n        <Row>\n          <Col span={10}>Report bugs</Col>\n        </Row>\n        <Row>\n          <Col span={10}>FAQ</Col>\n        </Row>\n        <Row>\n          <Col span={10}>URL to command instructions</Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Row, Col, Menu, Button, message } from \"antd\";\nimport \"./settings-page.scss\";\nimport UserSettings from \"src/components/settings-components/user-settings\";\nimport { ClickParam } from \"antd/lib/menu\";\nimport InterfaceSettings from \"src/components/settings-components/interface-settings\";\nimport SystemSettings from \"src/components/settings-components/system-settings\";\nimport HelpSettings from \"src/components/settings-components/help-settings\";\n\ninterface IProps {}\ninterface IState {\n  activeItem: any;\n}\n\nexport default class SettingsPage extends Component<IProps, IState> {\n  state = { activeItem: <UserSettings /> };\n\n  settingsMenuItems = [\"User\", \"Interface\", \"System\", \"Help\"];\n\n  createMenuItems = (item: string) => {\n    return <Menu.Item key={item}>{item}</Menu.Item>;\n  };\n\n  onItemClick = (param: ClickParam) => {\n    switch (param.key) {\n      case \"Interface\":\n        return this.setState({\n          activeItem: <InterfaceSettings />,\n        });\n      case \"System\":\n        return this.setState({\n          activeItem: <SystemSettings />,\n        });\n      case \"Help\":\n        return this.setState({\n          activeItem: (\n            <div>\n              <HelpSettings />\n            </div>\n          ),\n        });\n      default:\n        return this.setState({\n          activeItem: <UserSettings />,\n        });\n    }\n  };\n\n  onApply = () => {\n    message.success(\"Saved changes\", 1);\n  };\n\n  render() {\n    const { activeItem } = this.state;\n    return (\n      <div>\n        <h2 className=\"settings-header\">Settings</h2>\n        <Row>\n          <Col span={4} className=\"settingsMenu\">\n            <Menu mode=\"inline\" onClick={this.onItemClick}>\n              {this.settingsMenuItems.map((element) => {\n                return this.createMenuItems(element);\n              })}\n            </Menu>\n          </Col>\n          <Col span={16} push={2}>\n            <div className=\"option-box\">{activeItem}</div>\n          </Col>\n        </Row>\n        <br />\n        <Row>\n          <Col span={4} push={16}>\n            <Button>Cancel</Button>\n          </Col>\n          <Col span={4} push={16}>\n            <Button type=\"primary\" onClick={this.onApply}>\n              Apply\n            </Button>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { LumiState } from \"./interfaces\";\n\nconst LumiContext = React.createContext<LumiState | null>(null);\n\nexport const LumiProvider = LumiContext.Provider;\nexport const LumiConsumer = LumiContext.Consumer;\n\nexport default LumiContext;\n","import React, { Component } from \"react\";\nimport { FolderOpenOutlined } from \"@ant-design/icons\";\nimport { Input, Button, Row, Col } from \"antd\";\nimport FormItem from \"antd/lib/form/FormItem\";\nimport Form from \"antd/lib/form/Form\";\nimport LumiContext from \"src/context/lumi-context\";\nimport IPC from \"src/context/ipc\";\n\nconst { Search } = Input;\n\ninterface IProps {}\ninterface IState {}\n\nexport default class CreateComponent extends Component<IProps, IState> {\n  static contextType = LumiContext;\n\n  form: any = React.createRef();\n\n  selectDir = () => {\n    IPC.selectDir().then((path) => {\n      this.form.current.setFieldsValue({\n        source: path,\n      });\n    });\n  };\n\n  onFinish = (values: any) => {\n    if (this.context.loading || this.context.connected) return;\n    this.context.update({\n      connected: false,\n      loading: true,\n    });\n\n    IPC.createRoom(this.context, values.source);\n  };\n\n  onFinishFailed = (errorInfo: any) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  render() {\n    const { connected, loading } = this.context;\n\n    return (\n      <div className=\"container\">\n        <Row justify=\"start\">\n          <Col span={4}></Col>\n          <Col span={16}>\n            <Form\n              ref={this.form}\n              name=\"basic\"\n              initialValues={{ remember: true }}\n              onFinish={this.onFinish}\n              onFinishFailed={this.onFinishFailed}\n            >\n              <FormItem\n                name=\"source\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"You need to select a source folder\",\n                  },\n                ]}\n              >\n                <Search\n                  enterButton={\n                    <>\n                      <span>Open</span>\n                      <FolderOpenOutlined />\n                    </>\n                  }\n                  placeholder=\"Enter a folder path...\"\n                  onSearch={this.selectDir}\n                />\n              </FormItem>\n              <FormItem>\n                <Button\n                  disabled={connected}\n                  loading={loading}\n                  htmlType=\"submit\"\n                  type=\"primary\"\n                >\n                  Create room\n                </Button>\n              </FormItem>\n            </Form>\n          </Col>\n          <Col span={4}></Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Input, Button, Col, Row } from \"antd\";\nimport { FolderOutlined } from \"@ant-design/icons\";\nimport Form from \"antd/lib/form/Form\";\nimport FormItem from \"antd/lib/form/FormItem\";\nimport IPC from \"src/context/ipc\";\nimport LumiContext from \"src/context/lumi-context\";\n\nconst { Search } = Input;\n\ninterface IProps {}\ninterface IState {}\n\nexport default class JoinComponent extends Component<IProps, IState> {\n  static contextType = LumiContext;\n\n  form: any = React.createRef();\n\n  selectDir = () => {\n    IPC.selectDir().then((path) => {\n      this.form.current.setFieldsValue({\n        source: path,\n      });\n    });\n  };\n\n  onFinish = (values: any) => {\n    if (this.context.loading || this.context.connected) return;\n    this.context.update({\n      connected: false,\n      loading: true,\n    });\n\n    IPC.joinRoom(this.context, values.roomID, values.source);\n  };\n\n  onFinishFailed = (errorInfo: any) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  render() {\n    const { connected, loading } = this.context;\n\n    return (\n      <div className=\"container\">\n        <Row justify=\"start\">\n          <Col span={4}></Col>\n          <Col span={16}>\n            <Form\n              ref={this.form}\n              name=\"basic\"\n              initialValues={{ remember: true }}\n              onFinish={this.onFinish}\n              onFinishFailed={this.onFinishFailed}\n            >\n              <FormItem\n                name=\"roomID\"\n                rules={[\n                  { required: true, message: \"You need to enter a room ID\" },\n                ]}\n              >\n                <Input placeholder=\"Enter a room ID...\" />\n              </FormItem>\n              <FormItem\n                name=\"source\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"You need to select a source folder\",\n                  },\n                ]}\n              >\n                <Search\n                  enterButton={\n                    <>\n                      <span>Open</span>\n                      <FolderOutlined />\n                    </>\n                  }\n                  placeholder=\"Enter a folder path...\"\n                  onSearch={this.selectDir}\n                />\n              </FormItem>\n              <FormItem>\n                <Button\n                  disabled={connected}\n                  loading={loading}\n                  htmlType=\"submit\"\n                  type=\"primary\"\n                >\n                  Join room\n                </Button>\n              </FormItem>\n            </Form>\n          </Col>\n          <Col span={4}></Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { PageHeader, Tag } from \"antd\";\nimport LumiContext from \"src/context/lumi-context\";\nimport \"./top-bar.scss\";\n\ninterface IProps {}\ninterface IState {}\n\nexport default class TopBar extends Component<IProps, IState> {\n  static contextType = LumiContext;\n\n  render() {\n    const { title, connected } = this.context;\n    return (\n      <PageHeader\n        tags={\n          <Tag color={connected ? \"green\" : \"red\"}>\n            {connected ? \"Online\" : \"Offline\"}\n          </Tag>\n        }\n        className=\"header\"\n        title={title}\n      ></PageHeader>\n    );\n  }\n}\n","import { Tabs } from \"antd\";\nimport React, { Component } from \"react\";\nimport \"./start-page.scss\";\nimport CreateComponent from \"src/components/create/create-component\";\nimport JoinComponent from \"src/components/join/join-component\";\nimport LumiContext from \"src/context/lumi-context\";\nimport TopBar from \"src/components/topbar/top-bar\";\nimport { Redirect } from \"react-router-dom\";\nimport Paths from \"../paths\";\n\nconst { TabPane } = Tabs;\n\ninterface IProps {}\ninterface IState {\n  isCreate: boolean;\n}\n\nexport default class StartPage extends Component<IProps, IState> {\n  static contextType = LumiContext;\n\n  state = {\n    isCreate: true,\n    selectedKeys: [],\n  };\n\n  componentDidMount() {\n    this.updateTitle();\n  }\n\n  onChange = (key: string) => {\n    this.setState(\n      {\n        isCreate: key === \"1\",\n      },\n      this.updateTitle\n    );\n  };\n\n  updateTitle = () => {\n    this.context.update({\n      title: this.state.isCreate ? \"Create room\" : \"Join room\",\n    });\n  };\n\n  render() {\n    return this.context.connected ? (\n      <Redirect to={Paths.ROOM} />\n    ) : (\n      <>\n        <TopBar />\n        <Tabs onChange={this.onChange} type=\"card\" defaultActiveKey=\"1\">\n          <TabPane tab={<span>Create</span>} key=\"1\">\n            <CreateComponent />\n          </TabPane>\n          <TabPane tab={<span>Join</span>} key=\"2\">\n            <JoinComponent />\n          </TabPane>\n        </Tabs>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Row, Button } from \"antd\";\n\ninterface IProps {}\ninterface IState {}\n\nexport default class LeaveComponent extends Component<IProps, IState> {\n  /*leave = (\n    <div className=\"center\">\n      <h2>Session ID:</h2>\n      <div className=\"stick-to-bottom\">\n        <Row className=\"bottomButtons\">\n          <Col span={12}>\n            <Button type=\"primary\" block onClick={this.onCopy}>\n              Copy Session ID\n            </Button>\n          </Col>\n\n          <Col span={12}>\n            <Button type=\"primary\" block onClick={this.onLink}>\n              Fetch Invite Link\n            </Button>\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );*/\n\n  render() {\n    console.log(process.env);\n    return (\n      <div>\n        <Row>\n          <h2 className=\"center-text\">Leave Room?</h2>\n        </Row>\n        <Row className=\"bottomButtons\">\n          <Button>Leave</Button>\n          <Button danger>Close room for all</Button>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./leave-page.scss\";\nimport LeaveComponent from \"src/components/leave/leave-component\";\n\ninterface IProps {}\ninterface IState {}\n\nexport default class LeavePage extends Component<IProps, IState> {\n  render() {\n    return (\n      <div className=\"center\">\n        <LeaveComponent />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport DirectoryTree from \"antd/lib/tree/DirectoryTree\";\nimport { Button, Tooltip, Row, Card, Avatar } from \"antd\";\nimport {\n  UserAddOutlined,\n  FileTextOutlined,\n  ArrowRightOutlined,\n  UserOutlined,\n} from \"@ant-design/icons\";\nimport Paths from \"../paths\";\nimport TopBar from \"src/components/topbar/top-bar\";\nimport LumiContext from \"src/context/lumi-context\";\nimport IPC from \"src/context/ipc\";\nimport { Redirect } from \"react-router-dom\";\n\nimport \"./room-page.scss\";\nimport Meta from \"antd/lib/card/Meta\";\n\ninterface IProps {}\ninterface IState {\n  treeData: any;\n  users: any;\n}\n\nexport default class RoomFolderPage extends Component<IProps, IState> {\n  static contextType = LumiContext;\n\n  state = {\n    treeData: [],\n    users: [],\n  };\n\n  componentDidMount() {\n    if (!this.context.connected) return;\n\n    this.context.update({\n      title: \"Room\",\n    });\n\n    IPC.updateFolder((treeData: any) => {\n      this.setState({\n        treeData,\n      });\n    });\n\n    IPC.fetchFolder(this.context.room.source).then((treeData) => {\n      this.setState({\n        treeData,\n      });\n    });\n\n    IPC.updateUsers((users: any) => {\n      console.log(users);\n      this.setState({\n        users,\n      });\n    });\n\n    IPC.fetchUsers(this.context.room.roomId).then((users) => {\n      console.log(users);\n      this.setState({\n        users,\n      });\n    });\n  }\n\n  openInvite() {\n    IPC.openInvite();\n  }\n  openLogs() {\n    IPC.openLogs();\n  }\n  openLeave() {\n    IPC.openLeave();\n  }\n\n  bottomMenuButtons = (\n    <Row className=\"bottom-menu\">\n      <Tooltip title=\"Invite\" className=\"tooltip\">\n        <Button\n          size=\"large\"\n          onClick={this.openInvite}\n          type=\"primary\"\n          shape=\"circle\"\n          icon={<UserAddOutlined />}\n        />\n      </Tooltip>\n      <Tooltip title=\"Log\" className=\"tooltip\">\n        <Button\n          size=\"large\"\n          onClick={this.openLogs}\n          type=\"primary\"\n          shape=\"circle\"\n          icon={<FileTextOutlined />}\n        />\n      </Tooltip>\n      <Tooltip title=\"Leave\" className=\"tooltip\">\n        <Button\n          size=\"large\"\n          onClick={this.openLeave}\n          type=\"primary\"\n          shape=\"circle\"\n          icon={<ArrowRightOutlined />}\n        />\n      </Tooltip>\n    </Row>\n  );\n\n  onSelect = (keys: any, event: any) => {\n    //alert(\"Trigger Select\" + keys + event);\n  };\n\n  onExpand = () => {\n    //alert(\"Trigger Expand\");\n  };\n\n  makeUser = (user: any) => {\n    return (\n      <div className=\"userItem\">\n        <Card>\n          <Meta\n            avatar={<Avatar icon={<UserOutlined />} />}\n            title={user.username}\n            description={user.id}\n          />\n        </Card>\n      </div>\n    );\n  };\n\n  render() {\n    const { users, treeData } = this.state;\n\n    return !this.context.connected ? (\n      <Redirect to={Paths.START} />\n    ) : (\n      <>\n        <TopBar />\n        <div className=\"users\">{users.map(this.makeUser)}</div>\n        <div className=\"container\">\n          <DirectoryTree\n            multiple\n            defaultExpandAll\n            onSelect={this.onSelect}\n            onExpand={this.onExpand}\n            treeData={treeData}\n          />\n          {this.bottomMenuButtons}\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport IPC from \"src/context/ipc\";\nimport { Typography, Button, List, Avatar, message, Tooltip, Tag } from \"antd\";\nimport { ExportOutlined, UserOutlined } from \"@ant-design/icons\";\n\ninterface IProps {}\ninterface IState {\n  logs: any;\n}\n\nconst { Title } = Typography;\n\nexport default class ServerLogComponent extends Component<IProps, IState> {\n  state = {\n    logs: [],\n  };\n\n  componentDidMount = () => {\n    IPC.fetchLogs(10).then((logs) => {\n      console.log(logs);\n      this.setState({\n        logs,\n      });\n    });\n  };\n\n  onExport = () => {\n    message.loading({ content: \"Exporting...\" });\n    setTimeout(() => {\n      message.success({ content: \"Exported!\", duration: 2 });\n    }, 1000);\n  };\n\n  exportButton = (\n    <div className=\"exportButtonIcon\">\n      <Tooltip title=\"Export\" className=\"tooltip\">\n        <Button\n          type=\"primary\"\n          shape=\"circle\"\n          icon={<ExportOutlined />}\n          onClick={this.onExport}\n        />\n      </Tooltip>\n    </div>\n  );\n\n  makeLog = (log: any) => {\n    return (\n      <List.Item>\n        <List.Item.Meta\n          avatar={<Avatar icon={<UserOutlined />} />}\n          title={\n            <div>\n              {log.user}\n              <br />\n              <code>{log.path}</code>\n            </div>\n          }\n          description={log.date}\n        />\n        <Tag color=\"blue\">{log.event}</Tag>\n      </List.Item>\n    );\n  };\n\n  render() {\n    const { logs } = this.state;\n    return (\n      <div className=\"container\">\n        <Title level={2}>Room logs</Title>\n        <List itemLayout=\"horizontal\">{logs.map(this.makeLog)}</List>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./server-log-page.scss\";\nimport ServerLogComponent from \"src/components/server-log/server-log-component\";\n\ninterface IProps {}\ninterface IState {}\n\nexport default class ServerLogPage extends Component<IProps, IState> {\n  render() {\n    return (\n      <>\n        <ServerLogComponent />\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport LumiContext from \"./lumi-context\";\nimport IPCEvents from \"./ipc-events\";\nimport { Room } from \"./interfaces\";\nimport { withRouter } from \"react-router\";\n\nconst { ipcRenderer } = window.require(\"electron\");\n\ninterface IProps {\n  history: any;\n  location: any;\n  match: any;\n}\ninterface IState {}\n\nclass IPCGlobal extends Component<IProps, IState> {\n  static contextType = LumiContext;\n\n  componentDidMount() {\n    ipcRenderer\n      .invoke(IPCEvents.CHECK_CONNECTION)\n      .then((room: Room | boolean) => {\n        if (room !== false) {\n          this.context.update({\n            room,\n            connected: true,\n          });\n        } else {\n          this.context.update({\n            connected: false,\n          });\n        }\n      });\n\n    ipcRenderer.on(IPCEvents.NAVIGATE, (_: any, route: string) => {\n      this.props.history.push(route);\n    });\n\n    ipcRenderer.on(IPCEvents.DISCONNECTED, () => {\n      this.context.update({\n        connected: false,\n      });\n    });\n  }\n\n  render() {\n    return <></>;\n  }\n}\n\nconst IPCGlobalWithRouter = withRouter(IPCGlobal);\nexport default IPCGlobalWithRouter;\n","import React, { Component } from \"react\";\nimport { Route, HashRouter, Redirect, Switch } from \"react-router-dom\";\nimport Paths from \"src/pages/paths\";\n\nimport MainPage from \"./pages/main/main-page\";\nimport LoadingPage from \"./pages/loading/loading-page\";\nimport InvitePage from \"./pages/invite/invite-page\";\nimport SettingsPage from \"./pages/settings/settings-page\";\nimport StartPage from \"./pages/start/start-page\";\nimport LeavePage from \"./pages/leave/leave-page\";\nimport RoomFolderPage from \"./pages/room/room-page\";\nimport ServerLogPage from \"./pages/server-log/server-log-page\";\n\nimport { LumiState } from \"./context/interfaces\";\nimport { LumiProvider } from \"./context/lumi-context\";\nimport IPCGlobalWithRouter from \"./context/ipc-global\";\n\nimport \"./base.scss\";\n\nexport default class App extends Component<{}, LumiState> {\n  state = {\n    room: null,\n    connected: false,\n    title: \"Lumi\",\n    loading: false,\n    treeData: [],\n    update: (obj: any) => {\n      this.setState({ ...obj });\n    },\n  };\n\n  render() {\n    return (\n      <LumiProvider value={this.state}>\n        <HashRouter hashType=\"slash\">\n          <Route path=\"/\" component={IPCGlobalWithRouter} />\n          <Switch>\n            <Route path={Paths.START} component={StartPage} />\n            <Route path={Paths.ROOM} component={RoomFolderPage} />\n            <Route path={Paths.HOME} component={MainPage} />\n            <Route path={Paths.LOADING} component={LoadingPage} />\n            <Route path={Paths.INVITE} component={InvitePage} />\n            <Route path={Paths.SETTINGS} component={SettingsPage} />\n            <Route path={Paths.LEAVE} component={LeavePage} />\n            <Route path={Paths.SERVER_LOG} component={ServerLogPage} />\n            <Redirect to={Paths.START}></Redirect>\n          </Switch>\n        </HashRouter>\n      </LumiProvider>\n    );\n  }\n}\n","// Imports all the default style sheet\nimport \"antd/dist/antd.min.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./App\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}